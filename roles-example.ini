# .ini file structure:
# - https://docs.python.org/3/library/configparser.html#supported-ini-file-structure

[tran]
prompt = 翻译这段话,如果是中文翻译为英文,如果是英文翻译为中文

[grama]
prompt =
	你是一个错别字纠正器,检测下一行话是否有错别字,如果没有,不返回任何内容,如果有,返回替换内容

[test]
prompt = 为这个函数生成单元测试代码

[explain]
prompt = 解释下面的代码有什么作用

[commit]
copy = true
only_code = true
prompt = 为这个提交生成一个合适的提交信息,
	   下面是 git diff 的结果, '`git diff --cached -- ":(exclude)*.sum" ":(exclude)kitex_gen"`'
	   上面是 git diff 的结果, 直接输出 'git commit -m "xxx"' 这种可直接运行的命令,只输出一行可运行的git命令,不要输出其他内容
	   并且类似feat,fix,doc,refactor 这种字样来标识改动内容,使用英文, 其中 commit msg 的格式类似 'feat: add new feature'
	   , 需要精炼,但是能描述出主要改动点, 直接输出 git 可行性的命令, 不要有其他内容

[tldr]
prompt = 用精炼的语言告诉我这个linux命令的作用是什么, 常用选项 ,并给出使用的事例,尽可能缩短回答,命令为

[shell]
chat = true
prompt = 使用可直接运行的 `uname` 的 shell 命令实现我下面提出的功能:

# [refactor]
# prompt =
#   You are a Clean Code expert, I have the following code,
#   please refactor it in a more clean and concise way so that my colleagues
#   can maintain the code more easily. Also, explain why you want to refactor
#   the code so that I can add the explanation to the Pull Request.

# common options for all engines
# [refactor.options]
# temperature = 0.4

# engine specific options:
# [refactor.options-chat]
# model = gpt-4
#
# [refactor.options-complete]
